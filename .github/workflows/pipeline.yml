# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - feat/workflow

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Debug
      run: ls -l

    - name: Build with Gradle
      run: ./gradlew clean build

    - name: Upload Fastfood
      uses: actions/upload-artifact@v4
      with:
        name: fastfood-api.jar
        path: fastfood-api/build/libs/*.jar

    - name: Upload Fastfood
      uses: actions/upload-artifact@v4
      with:
        name: payment-mock-api.jar
        path: payment-mock-api/build/libs/*.jar

  publish:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: *
          path: target
      - name: Docker-Compose GitHub Packages Publish
        uses: soltys/publish-docker-compose@v1.0.0
        with:
          version: 0.0.1
          docker_compose: docker-compose.yaml

  deploy:
    needs: [publish]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: jar
          path: target
      - name: Deploy MongoDB
        uses: bitovi/github-actions-deploy-eks-helm@v1.2.9
        with:
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: us-east-1
          cluster-name: eks-cluster-fiap-fastfood-g86
          name: mongodb
          chart-path: charts/
          timeout: 20s

      - name: Deploy RabbitMQ
        uses: bitovi/github-actions-deploy-eks-helm@v1.2.9
        with:
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: us-east-1
          cluster-name: eks-cluster-fiap-fastfood-g86
          name: rabbitmq
          chart-path: charts/
          timeout: 20s

      - name: Deploy Payment Mock
        uses: bitovi/github-actions-deploy-eks-helm@v1.2.9
        with:
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: us-east-1
          cluster-name: eks-cluster-fiap-fastfood-g86
          name: payment-mock-api
          chart-path: charts/
          timeout: 20s

      - name: Deploy Fastfood
        uses: bitovi/github-actions-deploy-eks-helm@v1.2.9
        with:
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: us-east-1
          cluster-name: eks-cluster-fiap-fastfood-g86
          name: fastfood-api
          chart-path: charts/
          timeout: 20s